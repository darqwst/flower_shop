# Generated by Django 4.2.6 on 2023-11-28 12:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Тюльпаны', 'Тюльпаны'), ('Розы', 'Розы'), ('Лилии', 'Лилии'), ('Хризантемы', 'Хризантемы'), ('Незабудки', 'Незабудки'), ('Ромашки', 'Ромашки'), ('Георгины', 'Георгины'), ('Пионы', 'Пионы'), ('Орхидеи', 'Орхидеи'), ('Подсолнухи', 'Подсолнухи'), ('Ландыши', 'Ландыши'), ('Пионы', 'Пионы'), ('Астры', 'Астры'), ('Сирень', 'Сирень')], max_length=20)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Эквадор', 'Эквадор'), ('Колумбия', 'Колумбия'), ('Россия', 'Россия'), ('Узбекистан', 'Узбекистан'), ('Грузия', 'Грузия'), ('Россия', 'Россия'), ('Казахстан', 'Казахстан'), ('Эфиопия', 'Эфиопия'), ('Нидерланды', 'Нидерланды'), ('Кения', 'Кения'), ('Италия', 'Италия'), ('Беларусь', 'Беларусь'), ('Чили', 'Чили'), ('Испания', 'Испания')], max_length=20)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.PositiveIntegerField()),
                ('order_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='products')),
                ('country', models.CharField(choices=[('Эквадор', 'Эквадор'), ('Колумбия', 'Колумбия'), ('Россия', 'Россия'), ('Узбекистан', 'Узбекистан'), ('Грузия', 'Грузия'), ('Россия', 'Россия'), ('Казахстан', 'Казахстан'), ('Эфиопия', 'Эфиопия'), ('Нидерланды', 'Нидерланды'), ('Кения', 'Кения'), ('Италия', 'Италия'), ('Беларусь', 'Беларусь'), ('Чили', 'Чили'), ('Испания', 'Испания')], max_length=20)),
                ('price', models.PositiveIntegerField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(choices=[('cm', 'Centimeters'), ('mm', 'Millimeters'), ('piece', 'Piece'), ('pack', 'Pack'), ('box', 'Box')], max_length=20)),
                ('category', models.CharField(choices=[('Тюльпаны', 'Тюльпаны'), ('Розы', 'Розы'), ('Лилии', 'Лилии'), ('Хризантемы', 'Хризантемы'), ('Незабудки', 'Незабудки'), ('Ромашки', 'Ромашки'), ('Георгины', 'Георгины'), ('Пионы', 'Пионы'), ('Орхидеи', 'Орхидеи'), ('Подсолнухи', 'Подсолнухи'), ('Ландыши', 'Ландыши'), ('Пионы', 'Пионы'), ('Астры', 'Астры'), ('Сирень', 'Сирень')], max_length=20)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='store.OrderItem', to='store.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('wallet', models.PositiveIntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customer_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customer_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
    ]
